#include <iostream>
#include <stdio.h>
#include <math.h>
#include <vector>
using namespace std;
struct tree
{
int size,x;
tree *l, *r;
tree (int key)
	{
	x=key;
	size=1;
	l=r=0;
	}
};
vector <int> a;
void add(tree* &t,int x)
{
	if (t==0) t=new tree(x);
	else
		if (t->x > x) add(t->l, x);
		else add(t->r, x);
	t->size=(t->l ? t->l->size : 0) + (t->r ? t->r->size : 0) +1;
}
void dfs(tree* t)
{
if (t->l) dfs(t->l);
a.push_back(t->x);
if (t->r) dfs(t->r);
}
int main()
{
	tree* t=0;
	int x,d,k=1,i;
	while (1)
	{
	scanf("%d",&x);
	if (!x) break;
	add(t, x);
	}
	dfs(t);
	d=a[0];
	for (i=1;i<a.size();i++)
	{
		if (a[i]==d) k++;
		else
		{
		printf("%d %d\n",a[i-1],k);
		k=1;
		d=a[i];
		}
	}
	printf("%d %d\n",a[i-1],k);
}
